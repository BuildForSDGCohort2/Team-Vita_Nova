// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Create Course Component unit test render create courses and match snapshot 1`] = `
<v-responsive-stub title="CreateCourse">
  <div>
    <v-row-stub tag="div">
      <v-col-stub cols="12" md="6" tag="div" class="mt-n4">
        <h4><a class="links" style="color: rgb(100, 82, 98);">Courses</a> /
          <a class="links" style="color: rgb(100, 82, 98);">My Courses</a> /
          <a style="color: rgb(255, 46, 46);">Create Course</a>
        </h4>
      </v-col-stub>
    </v-row-stub>
    <v-row-stub tag="div">
      <v-col-stub cols="12" md="1" tag="div"></v-col-stub>
      <v-col-stub cols="12" md="10" tag="div">
        <v-row-stub tag="div">
          <v-col-stub tag="div">
            <h1>Create Course</h1>
          </v-col-stub>
        </v-row-stub>
        <v-row-stub tag="div">
          <v-col-stub tag="div">
            <v-card-stub loaderheight="4" tag="div" maxwidth="844" outlined="true" class="card mx-auto pa-6">
              <v-row-stub tag="div" class="mt-5">
                <v-col-stub cols="12" md="8" tag="div" class="ma-auto">
                  <div class="color-title" style="font-family: IBM Plex Sans;">Upload Course Image</div>
                  <div>
                    <v-btn-stub tag="button" activeclass="" xlarge="true" block="true" type="button" class="#2B1C1C black--text mt-4" style="font-family: IBM Plex Sans;">
                      <v-icon-stub color="#645262" class="ma-2">mdi-cloud-upload-outline</v-icon-stub>
                      Choose from files
                    </v-btn-stub> <input type="file" style="display: none;">
                  </div>
                </v-col-stub>
              </v-row-stub>
              <v-row-stub tag="div">
                <v-col-stub cols="12" md="8" tag="div">
                  <v-text-field-stub color="#FF2E2E" errorcount="1" errormessages="" messages="" rules="" successmessages="" value="" backgroundcolor="" label="Course Name" loaderheight="2" clearicon="$clear" outlined="true" type="text" class="mt-2"></v-text-field-stub>
                </v-col-stub>
              </v-row-stub>
              <v-row-stub tag="div">
                <v-col-stub cols="12" md="8" tag="div">
                  <v-combobox-stub color="#FF2E2E" errorcount="1" errormessages="" messages="" rules="" successmessages="" value="" appendicon="$dropdown" backgroundcolor="" label="Select Category" loaderheight="2" clearicon="$clear" outlined="true" type="text" valuecomparator="function deepEqual(a, b) {
  if (a === b) return true;

  if (a instanceof Date &amp;&amp; b instanceof Date) {
    // If the values are Date, they were convert to timestamp with getTime and compare it
    if (a.getTime() !== b.getTime()) return false;
  }

  if (a !== Object(a) || b !== Object(b)) {
    // If the values aren't objects, they were already checked for equality
    return false;
  }

  var props = Object.keys(a);

  if (props.length !== Object.keys(b).length) {
    // Different number of props, don't bother to check
    return false;
  }

  return props.every(function (p) {
    return deepEqual(a[p], b[p]);
  });
}" nodatatext="$vuetify.noDataText" items="Programming,Design,Vue,Vuetify" itemcolor="primary" itemdisabled="disabled" itemtext="text" itemvalue="value" menuprops="[object Object]" multiple="true" returnobject="true" allowoverflow="true" filter="function _default(item, queryText, itemText) {
        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1;
      }" delimiters="" class="mt-n5"></v-combobox-stub>
                </v-col-stub>
              </v-row-stub>
              <v-row-stub tag="div">
                <v-col-stub cols="12" md="8" tag="div">
                  <v-textarea-stub color="#FF2E2E" errorcount="1" errormessages="" messages="" rules="" successmessages="" value="" backgroundcolor="" label="Course Requirements" loaderheight="2" clearicon="$clear" outlined="true" type="text" rowheight="24" rows="5" name="input-7-4" class="mt-n5"></v-textarea-stub>
                </v-col-stub>
              </v-row-stub>
              <v-row-stub tag="div">
                <v-col-stub cols="12" md="8" tag="div">
                  <vue-editor-stub id="quill-container" placeholder="" value="Learning Outcomes <br>" editortoolbar="bold,italic,underline,[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],link,[object Object]" editoroptions="[object Object]" class="mt-n5" style="font-family: IBM Plex Sans;"></vue-editor-stub>
                </v-col-stub>
              </v-row-stub>
              <v-row-stub tag="div">
                <v-col-stub cols="12" md="8" tag="div">
                  <v-textarea-stub color="#FF2E2E" errorcount="1" errormessages="" messages="" rules="" successmessages="" value="" backgroundcolor="" label="Course Description" loaderheight="2" clearicon="$clear" outlined="true" type="text" rowheight="24" rows="5" name="input-7-4" class="mt-3"></v-textarea-stub>
                </v-col-stub>
              </v-row-stub>
              <v-row-stub tag="div">
                <v-col-stub cols="12" md="8" tag="div">
                  <v-combobox-stub color="#FF2E2E" errorcount="1" errormessages="" messages="" rules="" successmessages="" value="" appendicon="$dropdown" backgroundcolor="" label="Add Facilitator (Optional)" loaderheight="2" clearicon="$clear" outlined="true" type="text" valuecomparator="function deepEqual(a, b) {
  if (a === b) return true;

  if (a instanceof Date &amp;&amp; b instanceof Date) {
    // If the values are Date, they were convert to timestamp with getTime and compare it
    if (a.getTime() !== b.getTime()) return false;
  }

  if (a !== Object(a) || b !== Object(b)) {
    // If the values aren't objects, they were already checked for equality
    return false;
  }

  var props = Object.keys(a);

  if (props.length !== Object.keys(b).length) {
    // Different number of props, don't bother to check
    return false;
  }

  return props.every(function (p) {
    return deepEqual(a[p], b[p]);
  });
}" nodatatext="$vuetify.noDataText" items="Programming,Design,Vue,Vuetify" itemcolor="primary" itemdisabled="disabled" itemtext="text" itemvalue="value" menuprops="[object Object]" multiple="true" returnobject="true" allowoverflow="true" filter="function _default(item, queryText, itemText) {
        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1;
      }" delimiters="" class="mt-n5"></v-combobox-stub>
                </v-col-stub>
              </v-row-stub>
              <v-row-stub tag="div">
                <v-col-stub cols="12" md="4" tag="div">
                  <v-combobox-stub color="#FF2E2E" errorcount="1" errormessages="" messages="" rules="" successmessages="" value="" appendicon="$dropdown" backgroundcolor="" label="Start Date" loaderheight="2" clearicon="$clear" outlined="true" type="text" valuecomparator="function deepEqual(a, b) {
  if (a === b) return true;

  if (a instanceof Date &amp;&amp; b instanceof Date) {
    // If the values are Date, they were convert to timestamp with getTime and compare it
    if (a.getTime() !== b.getTime()) return false;
  }

  if (a !== Object(a) || b !== Object(b)) {
    // If the values aren't objects, they were already checked for equality
    return false;
  }

  var props = Object.keys(a);

  if (props.length !== Object.keys(b).length) {
    // Different number of props, don't bother to check
    return false;
  }

  return props.every(function (p) {
    return deepEqual(a[p], b[p]);
  });
}" nodatatext="$vuetify.noDataText" items="Programming,Design,Vue,Vuetify" itemcolor="primary" itemdisabled="disabled" itemtext="text" itemvalue="value" menuprops="[object Object]" multiple="true" returnobject="true" allowoverflow="true" filter="function _default(item, queryText, itemText) {
        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1;
      }" delimiters="" class="mt-n5"></v-combobox-stub>
                </v-col-stub>
                <v-col-stub cols="12" md="4" tag="div">
                  <v-combobox-stub errorcount="1" errormessages="" messages="" rules="" successmessages="" value="" appendicon="$dropdown" backgroundcolor="" label="End Date" loaderheight="2" clearicon="$clear" outlined="true" type="text" valuecomparator="function deepEqual(a, b) {
  if (a === b) return true;

  if (a instanceof Date &amp;&amp; b instanceof Date) {
    // If the values are Date, they were convert to timestamp with getTime and compare it
    if (a.getTime() !== b.getTime()) return false;
  }

  if (a !== Object(a) || b !== Object(b)) {
    // If the values aren't objects, they were already checked for equality
    return false;
  }

  var props = Object.keys(a);

  if (props.length !== Object.keys(b).length) {
    // Different number of props, don't bother to check
    return false;
  }

  return props.every(function (p) {
    return deepEqual(a[p], b[p]);
  });
}" nodatatext="$vuetify.noDataText" items="Programming,Design,Vue,Vuetify" itemcolor="primary" itemdisabled="disabled" itemtext="text" itemvalue="value" menuprops="[object Object]" multiple="true" returnobject="true" allowoverflow="true" filter="function _default(item, queryText, itemText) {
        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1;
      }" delimiters="" class="mt-n5"></v-combobox-stub>
                </v-col-stub>
              </v-row-stub>
              <v-row-stub tag="div">
                <v-col-stub cols="12" md="2" tag="div" class="ma-auto"></v-col-stub>
                <v-col-stub cols="12" md="8" tag="div" class="ma-auto mt-n4">
                  <v-btn-stub tag="button" activeclass="" large="true" type="button" class="btn" style="font-size: 18px; height: 53px; background: rgb(255, 46, 46); color: rgb(255, 255, 255); font-weight: bold;">
                    <v-icon-stub color="#fff">mdi-plus</v-icon-stub>
                    Create Course
                  </v-btn-stub>
                </v-col-stub>
                <v-col-stub cols="12" md="2" tag="div" class="ma-auto"></v-col-stub>
              </v-row-stub>
            </v-card-stub>
          </v-col-stub>
        </v-row-stub>
      </v-col-stub>
      <v-col-stub cols="12" md="1" tag="div" class="mt-5"></v-col-stub>
    </v-row-stub>
  </div>
</v-responsive-stub>
`;
